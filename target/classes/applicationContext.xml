<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- UserService的创建权交给Spring（通过工厂+反射+配置文件来完成） -->
<!--    <bean id="userService" class="com.imooc.ioc.demo1.UserServiceImpl">-->
<!--        &lt;!&ndash; 设置属性 依赖注入DI Dependence Injection&ndash;&gt;-->
<!--        <property name="name" value="李四"></property>-->
<!--    </bean>-->

    <!--Bean实例化的三种方式===========================-->
    <!--第一种：采用无参数的构造方法-->
<!--    <bean id="bean1" class="com.imooc.ioc.demo2.Bean1"/>-->
    <!--第2种：静态工厂-->
<!--    <bean id="bean2" class="com.imooc.ioc.demo2.Bean2Factory" factory-method="createBean2"/>-->
    <!--第3种：实例工厂-->
<!--    <bean id="bean3Factory" class="com.imooc.ioc.demo2.Bean3Factory"/>-->
<!--    <bean id="bean3" factory-bean="bean3Factory" factory-method="createBean3"/>-->

    <!--Bean作用范围===========================-->
<!--    <bean id="person" class="com.imooc.ioc.demo3.Person" scope="singleton"/>-->

<!--    <bean id="man" class="com.imooc.ioc.demo3.Man" init-method="setup" destroy-method="teardown">-->
<!--        <property name="name" value="张三"/>-->
<!--    </bean>-->
<!--    <bean class="com.imooc.ioc.demo3.MyBeanPostProcessor"/>-->

<!--    <bean id="userDao" class="com.imooc.ioc.demo3.UserDaoImpl"/>-->

    <!--Bean的属性注入DI——构造方法，也可以通过ref注入对象类型属性========================================-->
<!--    <bean id="user" class="com.imooc.ioc.demo4.User">-->
<!--        <constructor-arg name="name" value="张三"/>-->
<!--        <constructor-arg name="age" value="23"/>-->
<!--    </bean>-->

    <!--Bean的属性注入DI——Set方法，添加了对象Cat属性=================================================-->
<!--    <bean id="person" class="com.imooc.ioc.demo4.Person">-->
<!--        <property name="name" value="李四"/>-->
<!--        <property name="age" value="32"/>-->
<!--        <property name="cat" ref="mycat"/>-->
<!--    </bean>-->

<!--    <bean id="mycat" class="com.imooc.ioc.demo4.Cat">-->
<!--        <property name="name" value="Kitty"/>-->
<!--    </bean>-->

    <!--Bean的属性注入DI——p名称空间方法，以Person和Cat为例===========================-->
    <bean id="person" class="com.imooc.ioc.demo4.Person" p:name="大黄" p:age="34" p:cat-ref="mycat"/>
    <bean id="mycat" class="com.imooc.ioc.demo4.Cat" p:name="小黄"/>

    <!--Bean的属性注入DI——SpEl===========================-->
    <bean id="mycategory" class="com.imooc.ioc.demo4.Category">
        <property name="name" value="#{'服装'}"/>
    </bean>

    <bean id="productInfo" class="com.imooc.ioc.demo4.ProductInfo"/>

    <bean id="product" class="com.imooc.ioc.demo4.Product">
        <property name="name" value="#{'男装'}"/>
        <property name="price" value="#{productInfo.calculatePrice()}"/>
        <property name="category" value="#{mycategory}"/>
    </bean>



</beans>